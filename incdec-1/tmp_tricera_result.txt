SAFE

Inferred ACSL annotations
================================================================================
----- Applying PointerPropProcessor to precondition of decrement
----- Precondition: 
(EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4))
Result: 
Some((\separated(a, val) & (\valid(a) & \valid(val))))
----- Applying PointerPropProcessor to postcondition of decrement
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4)))
----- Result: 
None
----- Applying AssignmentProcessor to precondition of decrement
----- Precondition: 
(EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4))
----- Result: 
None
----- Applying AssignmentProcessor to postcondition of decrement
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4)))
----- Result: 
Some((getInt(read(_6, _5)) = getInt(O_Int((-1 + getInt(read(_0, _5)))))))
----- Applying tricera.postprocessor.PostconditionSimplifier$@2e1eb85f to decrement.
----- Precondition: 
(EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4))
----- New Precondition: 
(EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4))
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4)))
----- New Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4)))

----- Applying tricera.postprocessor.TheoryOfHeapProcessor$@33324c05 to decrement.
----- Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- New Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = getInt(O_Int((-1 + getInt(read(_0, _5)))))))
----- New Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ADTSimplifier$@40bd0f8 to decrement.
----- Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- New Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))
----- New Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ADTExploder$@5fb54740 to decrement.
----- Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- New Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))
----- New Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ToVariableForm$@325162e9 to decrement.
----- Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- New Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((-1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_4))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_4))) = newAddr(alloc(_2[Heap], O_Int(_1)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))
----- New Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_13)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ACSLExpressionProcessor$@10817f46 to decrement.
----- Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- New Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_13)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (getInt(read(_6, _5)) = (-1 + getInt(read(_0, _5)))))
----- New Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_13)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (deref(val) = (-1 + oldDeref(val))))

----- Applying tricera.postprocessor.ClauseRemover$@37775bb1 to decrement.
----- Precondition: 
((EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_9 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_7)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_8))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))), newAddr(alloc(_2[Heap], O_Int(_1))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_3))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_1))))))) & (_5 = _4)) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- New Precondition: 
((_5 = _4) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- Postcondition: 
((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int((1 + getInt(read(write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_1))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), O_Int(_14)), newAddr(alloc(_2[Heap], O_Int(_1)))))))) = _6)) & ((_15 = newAddr(alloc(_2[Heap], O_Int(_1)))) & (_11 = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14)) = write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), newAddr(alloc(_2[Heap], O_Int(_13))), O_Int(_13)), newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0))), O_Int(_14))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))), newAddr(alloc(_2[Heap], O_Int(_13))))) = 0)) & ((newAddr(alloc(newHeap(alloc(_5[Heap], O_Int(_11))), O_Int(_15))) = newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_13))), O_Int(_0)))) & (newAddr(alloc(_5[Heap], O_Int(_11))) = newAddr(alloc(_2[Heap], O_Int(_13)))))))) & (_5 = _10)) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (deref(val) = (-1 + oldDeref(val))))
----- New Postcondition: 
(((_5 = _10) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (deref(val) = (-1 + oldDeref(val))))

----- Applying ACSLLineariser to precondition: 
((_5 = _4) & (\separated(a, val) & (\valid(a) & \valid(val))))
----- Result: 
 _5 == _4 && \separated(a, val) && \valid(a) && \valid(val)
----- Applying ACSLLineariser to postcondition: 
(((_5 = _10) & ((((_7 = _1) & (_8 = _2)) & (_9 = _3)) & (_5 = _4))) & (deref(val) = (-1 + oldDeref(val))))
----- Result: 
 _5 == _10 && _7 == _1 && _8 == _2 && _9 == _3 && _5 == _4 && *val == \old(*val) - 1
/* contracts for decrement */
/*@
  requires val == b && \separated(a, val) && \valid(a) && \valid(val);
  ensures \old(val) == b && a_init == \old(a_init) && b_init == \old(b_init) && a == \old(a) && \old(val) == \old(b) && *val == \old(*val) - 1;
*/
----- Applying PointerPropProcessor to precondition of increment
----- Precondition: 
(EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3))
Result: 
Some((\separated(val, b) & (\valid(val) & \valid(b))))
----- Applying PointerPropProcessor to postcondition of increment
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4)))
----- Result: 
Some((\separated(val, b) & (\valid(val) & \valid(b))))
----- Applying AssignmentProcessor to precondition of increment
----- Precondition: 
(EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3))
----- Result: 
None
----- Applying AssignmentProcessor to postcondition of increment
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4)))
----- Result: 
Some((getInt(read(_6, _5)) = getInt(O_Int((1 + getInt(read(_0, _5)))))))
----- Applying tricera.postprocessor.PostconditionSimplifier$@2e1eb85f to increment.
----- Precondition: 
(EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3))
----- New Precondition: 
(EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3))
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4)))
----- New Postcondition: 
(((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4)))

----- Applying tricera.postprocessor.TheoryOfHeapProcessor$@33324c05 to increment.
----- Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- New Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = getInt(O_Int((1 + getInt(read(_0, _5)))))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ADTSimplifier$@40bd0f8 to increment.
----- Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- New Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ADTExploder$@5fb54740 to increment.
----- Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- New Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ToVariableForm$@325162e9 to increment.
----- Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- New Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (write(_0, _5, O_Int((1 + getInt(read(_0, _5))))) = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))

----- Applying tricera.postprocessor.ACSLExpressionProcessor$@10817f46 to increment.
----- Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- New Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (getInt(read(_6, _5)) = (1 + getInt(read(_0, _5)))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (deref(val) = (1 + oldDeref(val))))

----- Applying tricera.postprocessor.ClauseRemover$@37775bb1 to increment.
----- Precondition: 
((EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_4)), _7, O_Int(_5)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8)))) & (_5 = _3)) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- New Precondition: 
((_5 = _3) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _5)) = 0) & (_6 = _6)) & EX Heap. EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8, O_Int(_10)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))), _8, O_Int(_10)), _13, O_Int(_11)) = _3)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(_2[Heap], O_Int(_10))), O_Int(_0))), _8)) = 0) & ((newAddr(alloc(newHeap(alloc(_2[Heap], O_Int(_1))), O_Int(_0))) = _13) & (newAddr(alloc(_2[Heap], O_Int(_1))) = _8))))) & (_5 = _9)) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (deref(val) = (1 + oldDeref(val))))
----- New Postcondition: 
((((_5 = _9) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (deref(val) = (1 + oldDeref(val))))

----- Applying ACSLLineariser to precondition: 
((_5 = _3) & (\separated(val, b) & (\valid(val) & \valid(b))))
----- Result: 
 _5 == _3 && \separated(val, b) && \valid(val) && \valid(b)
----- Applying ACSLLineariser to postcondition: 
((((_5 = _9) & ((((_7 = _1) & (_8 = _2)) & (_5 = _3)) & (_10 = _4))) & (\separated(val, b) & (\valid(val) & \valid(b)))) & (deref(val) = (1 + oldDeref(val))))
----- Result: 
 _5 == _9 && _7 == _1 && _8 == _2 && _5 == _3 && _10 == _4 && \separated(val, b) && \valid(val) && \valid(b) && *val == 1 + \old(*val)
/* contracts for increment */
/*@
  requires val == a && \separated(val, b) && \valid(val) && \valid(b);
  ensures \old(val) == a && a_init == \old(a_init) && b_init == \old(b_init) && \old(val) == \old(a) && b == \old(b) && \separated(val, b) && \valid(val) && \valid(b) && *val == 1 + \old(*val);
*/
================================================================================

