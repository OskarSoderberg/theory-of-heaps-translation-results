SAFE

Inferred ACSL annotations
================================================================================
----- Applying PointerPropProcessor to precondition of addNumbers
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
Result: 
None
----- Applying PointerPropProcessor to postcondition of addNumbers
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _3)) = 0)) & (write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12)) & ((((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _13) >= 0)) & ((-2 + _14) >= 0)) & ((-3 + _3) >= 0)) & ((-4 + _17) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _3)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))) & (_3 = _4))) & (_3 = _11)) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))
----- Result: 
None
----- Applying AssignmentProcessor to precondition of addNumbers
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- Result: 
None
----- Applying AssignmentProcessor to postcondition of addNumbers
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _3)) = 0)) & (write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12)) & ((((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _13) >= 0)) & ((-2 + _14) >= 0)) & ((-3 + _3) >= 0)) & ((-4 + _17) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _3)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))) & (_3 = _4))) & (_3 = _11)) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))
----- Result: 
Some((getInt(read(_12, _3)) = getInt(O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10)))))))
----- Applying tricera.postprocessor.PostconditionSimplifier$@34f60be9 to addNumbers.
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- New Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _3)) = 0)) & (write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12)) & ((((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _13) >= 0)) & ((-2 + _14) >= 0)) & ((-3 + _3) >= 0)) & ((-4 + _17) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _3)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))) & (_3 = _4))) & (_3 = _11)) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))
----- New Postcondition: 
(((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))

----- Applying tricera.postprocessor.TheoryOfHeapProcessor$@4fd63c43 to addNumbers.
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- New Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- Postcondition: 
((((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _3)) = getInt(O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10)))))))
----- New Postcondition: 
((((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _3)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ADTSimplifier$@70aa03c0 to addNumbers.
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- New Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- Postcondition: 
((((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _3)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))
----- New Postcondition: 
((((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _3)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ADTExploder$@77db231c to addNumbers.
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- New Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- Postcondition: 
((((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _3)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))
----- New Postcondition: 
((((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _3)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ToVariableForm$@60b4d934 to addNumbers.
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _4) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _4)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- New Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _3) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _3)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- Postcondition: 
((((write(_0, _3, O_Int((getInt(read(_0, _9)) + getInt(read(_0, _10))))) = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _3)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))
----- New Postcondition: 
((((_12 = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _15)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ACSLExpressionProcessor$@5e34a84b to addNumbers.
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _3) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _3)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- New Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _3) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _3)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- Postcondition: 
((((_12 = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (getInt(read(_12, _15)) = (getInt(read(_0, _9)) + getInt(read(_0, _10)))))
----- New Postcondition: 
((((_12 = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (deref(c) = (oldDeref(x) + oldDeref(y))))

----- Applying tricera.postprocessor.ClauseRemover$@6fbcc078 to addNumbers.
----- Precondition: 
(((_3 = _4) & (_11 = _4)) & (((((((((-4 + counterAddr(_0)) >= 0) & ((-1 + _1) >= 0)) & ((-2 + _2) >= 0)) & ((-3 + _3) >= 0)) & ((-4 + _5) >= 0)) & ((-1 + _9) >= 0)) & ((-2 + _10) >= 0)) & (((HeapObject_ctor(read(_0, _3)) = 0) & (HeapObject_ctor(read(_0, _9)) = 0)) & (HeapObject_ctor(read(_0, _10)) = 0))))
----- New Precondition: 
((_3 = _4) & (_11 = _4))
----- Postcondition: 
((((_12 = _12) & (_3 = _15)) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (deref(c) = (oldDeref(x) + oldDeref(y))))
----- New Postcondition: 
(((_3 = _15) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (deref(c) = (oldDeref(x) + oldDeref(y))))

----- Applying ACSLLineariser to precondition: 
((_3 = _4) & (_11 = _4))
----- Result: 
 _3 == _4 && _11 == _4
----- Applying ACSLLineariser to postcondition: 
(((_3 = _15) & (((((((_13 = _1) & (_14 = _2)) & (_17 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & (deref(c) = (oldDeref(x) + oldDeref(y))))
----- Result: 
 _3 == _15 && _13 == _1 && _14 == _2 && _17 == _5 && _18 == _6 && _19 == _7 && _20 == _8 && _3 == _16 && *c == \old(*x) + \old(*y)
/* contracts for addNumbers */
/*@
  requires c == result1 && result == result1;
  ensures \old(c) == c && a == \old(a) && b == \old(b) && result2 == \old(result2) && a_init == \old(a_init) && b_init == \old(b_init) && c_init == \old(c_init) && \old(c) == result1 && *c == \old(*x) + \old(*y);
*/
----- Applying PointerPropProcessor to precondition of multiplyNumbers
----- Precondition: 
(EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5)))
Result: 
Some(((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Applying PointerPropProcessor to postcondition of multiplyNumbers
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))
----- Result: 
Some(((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Applying AssignmentProcessor to precondition of multiplyNumbers
----- Precondition: 
(EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5)))
----- Result: 
None
----- Applying AssignmentProcessor to postcondition of multiplyNumbers
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))
----- Result: 
Some((getInt(read(_12, _11)) = getInt(O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))))
----- Applying tricera.postprocessor.PostconditionSimplifier$@34f60be9 to multiplyNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5)))
----- New Precondition: 
(EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5)))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))
----- New Postcondition: 
((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16)))

----- Applying tricera.postprocessor.TheoryOfHeapProcessor$@4fd63c43 to multiplyNumbers.
----- Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = getInt(O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))))
----- New Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ADTSimplifier$@70aa03c0 to multiplyNumbers.
----- Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))
----- New Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ADTExploder$@77db231c to multiplyNumbers.
----- Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))
----- New Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ToVariableForm$@60b4d934 to multiplyNumbers.
----- Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (write(_0, _11, O_Int(mul(getInt(read(_0, _9)), getInt(read(_0, _10))))) = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))
----- New Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (_12 = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))

----- Applying tricera.postprocessor.ACSLExpressionProcessor$@5e34a84b to multiplyNumbers.
----- Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (_12 = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (getInt(read(_12, _11)) = mul(getInt(read(_0, _9)), getInt(read(_0, _10)))))
----- New Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (_12 = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (deref(result) = mul(oldDeref(x), oldDeref(y))))

----- Applying tricera.postprocessor.ClauseRemover$@6fbcc078 to multiplyNumbers.
----- Precondition: 
((EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_11)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)))) & ((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- New Precondition: 
(((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5)) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Postcondition: 
((((((((((HeapObject_ctor(read(_0, _9)) = 0) & (HeapObject_ctor(read(_0, _10)) = 0)) & (HeapObject_ctor(read(_0, _11)) = 0)) & (_12 = _12)) & EX Heap. EX EX EX EX (((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & ((newAddr(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))) = _8))) & (((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0)) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), _8, O_Int((getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) + getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2)))))))) = _5)) & ((_14 = newAddr(alloc(_4[Heap], O_Int(_3)))) & (_15 = newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_2))))))) & (((((((-4 + counterAddr(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)))) >= 0) & ((-3 + _8) >= 0)) & ((-4 + _16) >= 0)) & ((-1 + newAddr(alloc(_4[Heap], O_Int(_3)))) >= 0)) & ((-2 + newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15)))) >= 0)) & (((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), _8)) = 0) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(_4[Heap], O_Int(_3))))) = 0)) & (HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_4[Heap], O_Int(_3))), O_Int(_23)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))), O_Int(_24)), newAddr(alloc(newHeap(alloc(_4[Heap], O_Int(_3))), O_Int(_15))))) = 0))))) & (_3 = _4)) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (deref(result) = mul(oldDeref(x), oldDeref(y))))
----- New Postcondition: 
(((((_3 = _4) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (deref(result) = mul(oldDeref(x), oldDeref(y))))

----- Applying ACSLLineariser to precondition: 
(((((_9 = _1) & (_10 = _2)) & (_3 = _4)) & (_11 = _5)) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result))))
----- Result: 
 _9 == _1 && _10 == _2 && _3 == _4 && _11 == _5 && \separated(x, y) && \separated(x, c) && \separated(x, result) && \separated(y, c) && \separated(y, result) && \separated(c, result) && \valid(x) && \valid(y) && \valid(c) && \valid(result)
----- Applying ACSLLineariser to postcondition: 
(((((_3 = _4) & ((((_9 = _13) & (_10 = _14)) & (_3 = _15)) & (_11 = _17))) & (((((((_9 = _1) & (_10 = _2)) & (_11 = _5)) & (_18 = _6)) & (_19 = _7)) & (_20 = _8)) & (_3 = _16))) & ((((((\separated(x, y) & \separated(x, c)) & \separated(x, result)) & \separated(y, c)) & \separated(y, result)) & \separated(c, result)) & (((\valid(x) & \valid(y)) & \valid(c)) & \valid(result)))) & (deref(result) = mul(oldDeref(x), oldDeref(y))))
----- Result: 
 _3 == _4 && _9 == _13 && _10 == _14 && _3 == _15 && _11 == _17 && _9 == _1 && _10 == _2 && _11 == _5 && _18 == _6 && _19 == _7 && _20 == _8 && _3 == _16 && \separated(x, y) && \separated(x, c) && \separated(x, result) && \separated(y, c) && \separated(y, result) && \separated(c, result) && \valid(x) && \valid(y) && \valid(c) && \valid(result) && *result == \old(*x) * \old(*y)
/* contracts for multiplyNumbers */
/*@
  requires x == a && y == b && c == result1 && result == result2 && \separated(x, y) && \separated(x, c) && \separated(x, result) && \separated(y, c) && \separated(y, result) && \separated(c, result) && \valid(x) && \valid(y) && \valid(c) && \valid(result);
  ensures \old(c) == \old(result1) && \old(x) == a && \old(y) == b && \old(c) == c && \old(result) == result2 && \old(x) == \old(a) && \old(y) == \old(b) && \old(result) == \old(result2) && a_init == \old(a_init) && b_init == \old(b_init) && c_init == \old(c_init) && \old(c) == result1 && \separated(x, y) && \separated(x, c) && \separated(x, result) && \separated(y, c) && \separated(y, result) && \separated(c, result) && \valid(x) && \valid(y) && \valid(c) && \valid(result) && *result == \old(*x) * \old(*y);
*/
================================================================================

