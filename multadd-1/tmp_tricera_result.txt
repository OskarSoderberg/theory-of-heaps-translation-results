SAFE

Inferred ACSL annotations
================================================================================
----- Applying PointerPropProcessor to precondition of addTwoNumbers
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
Result: 
None
----- Applying PointerPropProcessor to postcondition of addTwoNumbers
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5)))
----- Result: 
None
----- Applying AssignmentProcessor to precondition of addTwoNumbers
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- Result: 
None
----- Applying AssignmentProcessor to postcondition of addTwoNumbers
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5)))
----- Result: 
Some((getInt(read(_9, _8)) = getInt(O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7)))))))
----- Applying tricera.postprocessor.PostconditionSimplifier$@2f79f192 to addTwoNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- New Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5)))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5)))

----- Applying tricera.postprocessor.TheoryOfHeapProcessor$@7d8b66d9 to addTwoNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- New Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = getInt(O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7)))))))
----- New Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))

----- Applying tricera.postprocessor.ADTSimplifier$@1182413a to addTwoNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- New Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))
----- New Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))

----- Applying tricera.postprocessor.ADTExploder$@1a785fd5 to addTwoNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- New Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))
----- New Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))

----- Applying tricera.postprocessor.ToVariableForm$@4a660b34 to addTwoNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- New Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (write(_0, _8, O_Int((getInt(read(_0, _6)) + getInt(read(_0, _7))))) = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_2))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_2)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))
----- New Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (_9 = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))

----- Applying tricera.postprocessor.ACSLExpressionProcessor$@8f39224 to addTwoNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- New Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (_9 = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (getInt(read(_9, _8)) = (getInt(read(_0, _6)) + getInt(read(_0, _7)))))
----- New Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (_9 = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (deref(result) = (oldDeref(a) + oldDeref(b))))

----- Applying tricera.postprocessor.ClauseRemover$@6b09ce57 to addTwoNumbers.
----- Precondition: 
(EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)), newAddr(alloc(_3[Heap], O_Int(_15))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_12)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_13))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15))))))) & (((_6 = _1) & (_7 = _2)) & (_8 = _3)))
----- New Precondition: 
(((_6 = _1) & (_7 = _2)) & (_8 = _3))
----- Postcondition: 
((((((((HeapObject_ctor(read(_0, _6)) = 0) & (HeapObject_ctor(read(_0, _7)) = 0)) & (HeapObject_ctor(read(_0, _8)) = 0)) & (_9 = _9)) & EX Heap. EX EX EX EX Heap. EX EX EX ((((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _16)) & ((((((HeapObject_ctor(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0) & (write(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(2 * getInt(read(write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_2))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_22)), newAddr(alloc(_3[Heap], O_Int(_2))))))) = _8)) & ((_14 = newAddr(alloc(_3[Heap], O_Int(_2)))) & (_15 = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1)))))) & ((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22)) = write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_0))), newAddr(alloc(_3[Heap], O_Int(_15))), O_Int(_21)), newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))), O_Int(_22))))) & (HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))), O_Int(_21))), newAddr(alloc(_3[Heap], O_Int(_15))))) = 0)) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_5))), O_Int(_4))) = _16) & (newAddr(alloc(newHeap(alloc(_7[Heap], O_Int(_6))), O_Int(_22))) = newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_15))), O_Int(_14))))) & (newAddr(alloc(_7[Heap], O_Int(_6))) = newAddr(alloc(_3[Heap], O_Int(_15)))))))) & (((_6 = _10) & (_7 = _11)) & (_8 = _12))) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (deref(result) = (oldDeref(a) + oldDeref(b))))
----- New Postcondition: 
(((((_6 = _10) & (_7 = _11)) & (_8 = _12)) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (deref(result) = (oldDeref(a) + oldDeref(b))))

----- Applying ACSLLineariser to precondition: 
(((_6 = _1) & (_7 = _2)) & (_8 = _3))
----- Result: 
 _6 == _1 && _7 == _2 && _8 == _3
----- Applying ACSLLineariser to postcondition: 
(((((_6 = _10) & (_7 = _11)) & (_8 = _12)) & (((((_6 = _1) & (_7 = _2)) & (_8 = _3)) & (_13 = _4)) & (_14 = _5))) & (deref(result) = (oldDeref(a) + oldDeref(b))))
----- Result: 
 _6 == _10 && _7 == _11 && _8 == _12 && _6 == _1 && _7 == _2 && _8 == _3 && _13 == _4 && _14 == _5 && *result == \old(*a) + \old(*b)
/* contracts for addTwoNumbers */
/*@
  requires a == a && b == b && result == result;
  ensures \old(a) == a && \old(b) == b && \old(result) == result && \old(a) == \old(a) && \old(b) == \old(b) && \old(result) == \old(result) && a_init == \old(a_init) && b_init == \old(b_init) && *result == \old(*a) + \old(*b);
*/
----- Applying PointerPropProcessor to precondition of multiplyByTwo
----- Precondition: 
(EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1))
Result: 
Some((((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Applying PointerPropProcessor to postcondition of multiplyByTwo
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5)))
----- Result: 
Some((((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Applying AssignmentProcessor to precondition of multiplyByTwo
----- Precondition: 
(EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1))
----- Result: 
None
----- Applying AssignmentProcessor to postcondition of multiplyByTwo
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5)))
----- Result: 
Some((getInt(read(_7, _6)) = getInt(O_Int(2 * getInt(read(_0, _6))))))
----- Applying tricera.postprocessor.PostconditionSimplifier$@2f79f192 to multiplyByTwo.
----- Precondition: 
(EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1))
----- New Precondition: 
(EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1))
----- Postcondition: 
(((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5)))
----- New Postcondition: 
(((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5)))

----- Applying tricera.postprocessor.TheoryOfHeapProcessor$@7d8b66d9 to multiplyByTwo.
----- Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = getInt(O_Int(2 * getInt(read(_0, _6))))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))

----- Applying tricera.postprocessor.ADTSimplifier$@1182413a to multiplyByTwo.
----- Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))

----- Applying tricera.postprocessor.ADTExploder$@1a785fd5 to multiplyByTwo.
----- Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))

----- Applying tricera.postprocessor.ToVariableForm$@4a660b34 to multiplyByTwo.
----- Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (write(_0, _6, O_Int(2 * getInt(read(_0, _6)))) = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (_7 = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))

----- Applying tricera.postprocessor.ACSLExpressionProcessor$@8f39224 to multiplyByTwo.
----- Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- New Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (_7 = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (getInt(read(_7, _6)) = 2 * getInt(read(_0, _6))))
----- New Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (_7 = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (deref(num) = 2 * oldDeref(num)))

----- Applying tricera.postprocessor.ClauseRemover$@6b09ce57 to multiplyByTwo.
----- Precondition: 
((EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10, O_Int(_8)), _6, O_Int(_9)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _7) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _6)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10)))) & (_6 = _1)) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- New Precondition: 
((_6 = _1) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Postcondition: 
(((((((HeapObject_ctor(read(_0, _6)) = 0) & (_7 = _7)) & EX Heap. EX EX EX (((HeapObject_ctor(read(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10, O_Int(_15)), _13)) = 0) & (write(write(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))), _10, O_Int(_15)), _13, O_Int(_16)) = _4)) & ((HeapObject_ctor(read(newHeap(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_13))), O_Int(_10))), O_Int(_0))), _10)) = 0) & (((newAddr(alloc(newHeap(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))), O_Int(_0))) = _14) & (newAddr(alloc(newHeap(alloc(_3[Heap], O_Int(_2))), O_Int(_1))) = _13)) & (newAddr(alloc(_3[Heap], O_Int(_2))) = _10))))) & (_6 = _8)) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (deref(num) = 2 * oldDeref(num)))
----- New Postcondition: 
((((_6 = _8) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (deref(num) = 2 * oldDeref(num)))

----- Applying ACSLLineariser to precondition: 
((_6 = _1) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result))))
----- Result: 
 _6 == _1 && \separated(num, b) && \separated(num, result) && \separated(b, result) && \valid(num) && \valid(b) && \valid(result)
----- Applying ACSLLineariser to postcondition: 
((((_6 = _8) & (((((_6 = _1) & (_9 = _2)) & (_10 = _3)) & (_11 = _4)) & (_12 = _5))) & (((\separated(num, b) & \separated(num, result)) & \separated(b, result)) & ((\valid(num) & \valid(b)) & \valid(result)))) & (deref(num) = 2 * oldDeref(num)))
----- Result: 
 _6 == _8 && _6 == _1 && _9 == _2 && _10 == _3 && _11 == _4 && _12 == _5 && \separated(num, b) && \separated(num, result) && \separated(b, result) && \valid(num) && \valid(b) && \valid(result) && *num == 2*\old(*num)
/* contracts for multiplyByTwo */
/*@
  requires num == a && \separated(num, b) && \separated(num, result) && \separated(b, result) && \valid(num) && \valid(b) && \valid(result);
  ensures \old(num) == a && \old(num) == \old(a) && b == \old(b) && result == \old(result) && a_init == \old(a_init) && b_init == \old(b_init) && \separated(num, b) && \separated(num, result) && \separated(b, result) && \valid(num) && \valid(b) && \valid(result) && *num == 2*\old(*num);
*/
================================================================================

